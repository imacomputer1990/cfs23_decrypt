package rusty.pipes.cfs23;

import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.file.CopyOption;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class MainFrame extends JFrame 
{
    public MainFrame() 
    {
        initComponents();
    }
    private void browseBtnActionPerformed(ActionEvent event)
    {
        JFileChooser jfc = new JFileChooser();
        jfc.setCurrentDirectory(new File(System.getenv("APPDATA")));
        jfc.setMultiSelectionEnabled(false);
        jfc.showOpenDialog(this);
        File f = jfc.getSelectedFile();
        if(f != null)
            fileBox.setText(f.getAbsolutePath());
    }
    private void loadBtnActionPerformed(ActionEvent event)
    {
        String data;
        try
        {
            data = new String(Files.readAllBytes(Paths.get(fileBox.getText())));
        }
        catch(FileNotFoundException fnfe)
        {
            JOptionPane.showMessageDialog(this, "Could not find file:\n" + fileBox.getText(), "File Not Found", JOptionPane.ERROR_MESSAGE);
            return;
        } 
        catch(IOException ex) 
        {
            JOptionPane.showMessageDialog(this, "Failed to read file:\n" + fileBox.getText(), "Unknown Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String dec = CfsDecryptor.xorEncode(data);
        if(dec == null)
            JOptionPane.showMessageDialog(this, "Failed to decrypt data.", "Unknown Error", JOptionPane.ERROR_MESSAGE);
        else
            jsonArea.setText(dec);
    }
    private void saveBtnActionPerformed(ActionEvent event)
    {
        String data = CfsDecryptor.xorEncode(jsonArea.getText());
        if(data == null)
        {
            JOptionPane.showMessageDialog(this, "Failed to encrypt data.", "Unknown Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        File write = new File(fileBox.getText()),
             backup = new File(fileBox.getText() + "_backup");
        
        try
        {
            Files.copy(write.toPath(), backup.toPath(), StandardCopyOption.REPLACE_EXISTING);
        }
        catch(Exception err)
        {
            int choice = JOptionPane.showOptionDialog(this, 
                                                "Failed to create backup file. Proceed anyways?", 
                                                 "Backup Failed",
                                              JOptionPane.YES_NO_OPTION,
                                             JOptionPane.WARNING_MESSAGE,
                                                  null, 
                                                null, 
                                            1);
            if(choice != 0)
                return;
        }
        
        try
        {
            Files.writeString(write.toPath(), data);
        }
        catch(Exception err)
        {
            JOptionPane.showMessageDialog(this, "Failed to save to file:\n" + write.getAbsolutePath(), "Unknown Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void searchBoxActionPerformed(ActionEvent event)
    {
        Pattern pattern = Pattern.compile("\\b" + searchBox.getText() + "\\b");
        Matcher matcher = pattern.matcher(jsonArea.getText());
        if(matcher.find(0))
            jsonArea.select(matcher.start(), matcher.end());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileBox = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        browseBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jsonArea = new javax.swing.JTextArea();
        loadBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        searchBox = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Save File:");

        browseBtn.setText("Browse");
        browseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseBtnActionPerformed(evt);
            }
        });

        jsonArea.setColumns(20);
        jsonArea.setRows(5);
        jScrollPane1.setViewportView(jsonArea);

        loadBtn.setText("Load");
        loadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadBtnActionPerformed(evt);
            }
        });

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Search:");

        searchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fileBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(browseBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loadBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveBtn)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchBox)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseBtn)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadBtn)
                    .addComponent(saveBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /*
    private void browseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_browseBtnActionPerformed

    private void loadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loadBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveBtnActionPerformed

    private void searchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBoxActionPerformed
    */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseBtn;
    private javax.swing.JTextField fileBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jsonArea;
    private javax.swing.JButton loadBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextField searchBox;
    // End of variables declaration//GEN-END:variables
}
